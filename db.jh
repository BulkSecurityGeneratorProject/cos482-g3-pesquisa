entity Usuario {}

entity Aluno {
  nome String required,
  dre String required,
  dataDeEntrada ZonedDateTime required
}

entity Professor {
	nome String required,
  matricula String required,
  linkLattes String required,
  programa String,
  linhaDePesquisa String,
  areasDeInteresse String
}

entity Publicacao {
  url String required,
  pertenceAoPrograma Boolean
}

entity Seminario {
  titulo String,
  dataEHora ZonedDateTime,
  local String
}

enum EstadoAprovacaoDefesa {
	PENDENTE, APROVADO, REPROVADO
}

entity ParticipacaoBanca {
  confirmado Boolean,
  estadoAprovacaoDefesa EstadoAprovacaoDefesa
}

enum TipoDefesa {
	QUALIFICACAO, DEFESADETESE
}

entity Defesa {
  dataEHora ZonedDateTime,
  local String
  arquivoTexto String,
  tipoDefesa TipoDefesa
}

entity Reuniao {
  dataEHora ZonedDateTime,
  local String
}

relationship OneToMany {
  Professor{aluno} to Aluno{orientador},
  Aluno{publicacao} to Publicacao{aluno},
  Usuario{seminario} to Seminario{organizador},
  Aluno{defesa} to Defesa{aluno},
  Defesa{participacaoBanca} to ParticipacaoBanca{defesa},
  Professor{participacaoBanca} to ParticipacaoBanca{professor},
  Professor{reuniao} to Reuniao{professor},
  Aluno{reuniao} to Reuniao{aluno}
}

// Herança não existe em JDL, então fazemos composição + constraints
relationship OneToOne {
  Aluno{usuario} to Usuario{aluno},
  Professor{usuario} to Usuario{professor}
}

relationship ManyToMany {
  Usuario{publicacao} to Publicacao{coautor},
  Professor{coorientador} to Aluno{aluno}
}

// Set pagination options
paginate all with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
angularSuffix * with cos482_g3
